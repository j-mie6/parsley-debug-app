name: Dill-CI

# Defines when the pipeline will be invoked
on:
  push:
    branches: 
      - main
      - dev
      
  pull_request:
    branches:
      - main 
      - dev

  # Allows us to run the workflow whenever we want from GitHub Actions
  workflow_dispatch:

jobs:
  check:
    name: Check project compiles using cargo

    # Creates a job for each OS
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      
      # Use composite action for setup 
      - name: Setup 
        uses: ./.github/actions/setup

      - name: Run Laminar Test Script
        shell: bash
        run: | 
          cd src-tauri
          cargo check

          
  style: 
    name: Checks code style using cargo

    # Creates a job for each OS
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Use composite action for setup 
      - name: Setup 
        uses: ./.github/actions/setup

      - name: Cargo clippy
        shell: bash
        run: |
          cd src-tauri
          cargo clippy 

  test-laminar:
    # Requires that check job is completed first
    needs: check

    # Creates a job for each OS
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      
      # Use composite action for setup 
      - name: Setup 
        uses: ./.github/actions/setup

      - name: Run Laminar Test Script
        shell: bash
        run: sh scripts/test-laminar.sh


  test-tauri:
    # Requires that check job is completed first
    needs: check

    # Creates a job for each OS
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Use composite action for setup 
      - name: Setup 
        uses: ./.github/actions/setup

      - name: Run Tauri Test Script
        shell: bash
        run: sh scripts/test-tauri.sh


  build:
    name: Build project into an app
    
    # Pass tests before building
    needs: [test-tauri, test-laminar] 
    
    # Creates a job for each OS
    runs-on: ${{matrix.os}} 
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      
      # Use composite action for setup 
      - name: Setup 
        uses: ./.github/actions/setup

      - name: Run Build Script
        shell: bash
        run: |
          echo Running build.sh
          sh scripts/build.sh